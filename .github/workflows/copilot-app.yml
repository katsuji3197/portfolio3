name: Copilot App Review

on:
  pull_request:
    types: [opened, synchronize, reopened]
    branches: ['main']

jobs:
  copilot-app-review:
    name: Copilot App Code Review
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Install pnpm
        uses: pnpm/action-setup@v4
        with:
          version: latest

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Run security scan
        run: |
          echo "Running security scan..."
          # セキュリティスキャンの実行
          pnpm audit --audit-level moderate || true

      - name: Run Copilot App Review
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const { data: pr } = await github.rest.pulls.get({
              owner: context.repo.owner,
              repo: context.repo.repo,
              pull_number: context.issue.number
            });

            const { data: files } = await github.rest.pulls.listFiles({
              owner: context.repo.owner,
              repo: context.repo.repo,
              pull_number: context.issue.number
            });

            // 変更されたファイルの分析
            const changedFiles = files.map(file => file.filename);
            const addedLines = files.reduce((sum, file) => sum + file.additions, 0);
            const deletedLines = files.reduce((sum, file) => sum + file.deletions, 0);

            // Copilotレビューコメントの作成
            const reviewComment = `## 🤖 Copilot 自動レビュー結果

            ### 📊 変更統計
            - 変更されたファイル数: ${changedFiles.length}
            - 追加された行数: ${addedLines}
            - 削除された行数: ${deletedLines}

            ### 🔍 レビュー対象ファイル
            ${changedFiles.map(file => `- \`${file}\``).join('\n')}

            ### 💡 推奨事項
            1. **コードレビュー**: 変更されたファイルを詳細にレビューしてください
            2. **テスト確認**: 新機能や変更に対するテストが適切に実装されているか確認してください
            3. **セキュリティ**: セキュリティ上の問題がないか確認してください
            4. **パフォーマンス**: パフォーマンスに影響がないか確認してください

            ### 🚀 次のステップ
            - [ ] コードレビューの実施
            - [ ] テストの実行確認
            - [ ] セキュリティスキャンの確認
            - [ ] ドキュメントの更新確認`;

            await github.rest.issues.createComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: context.issue.number,
              body: reviewComment
            });
